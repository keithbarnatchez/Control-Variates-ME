cvterm <- mean(muY1[V==1])
centerterm <- mean(muY1)
# Get infl funcs
y_eif <- Y*R/mean(R)
cv_eif <- muY1*V/mean(V)
center_eif <- muY1
# Get control variate est
ybar_cv <- ybar1 - cov(y_eif,cv_eif-center_eif)/var(cv_eif-center_eif) * (cvterm-centerterm)
# Do version with estimated muY
cv_eif <- muY1pred*V/mean(V)
center_eif <- muY1pred
ybar_cv2 <- ybar1 - cov(y_eif,cv_eif-center_eif)/var(cv_eif-center_eif) * mean(cv_eif-center_eif)
resdf <- rbind(resdf, data.frame(ybar1=ybar1,
ybar_cv=ybar_cv,
ybar_cv2=ybar_cv2,
rho_R=rho_R))
}
}
# get mean and variance by rho_R
resdf %>% group_by(rho_R) %>% summarise(mean_ybar1=mean(ybar1),
mean_ybar_cv=mean(ybar_cv),
mean_ybar_cv2=mean(ybar_cv2),
var_ybar1=var(ybar1),
var_ybar_cv=var(ybar_cv),
var_ybar_cv2=var(ybar_cv2))
# Reshape data to long format using pivot_longer
# Also rename the
ofplot <- resdf %>% pivot_longer(cols=c(ybar1, ybar_cv, ybar_cv2),
names_to='key', values_to='value') %>%
filter(key != 'ybar_cv') %>%
mutate(key=ifelse(key=='ybar1', 'Trial only', 'Control variate')) %>%
mutate(rhoR = paste0('Share of ext. trial used: ', rho_R))
# Get summary stats of value for each value of key and rho_R
# ofplot %>% group_by(key, rho_R) %>% summarise(mean=mean(value), sd=sd(value))
# # make density ridge plot of the three densities
ofplot %>% ggplot(aes(x=value, y=key,fill=key)) +
facet_wrap(~as.factor(rhoR)) +
geom_density_ridges() +
theme_bw() + theme(legend.position='none')
# Plot empirical variances of each method as a function of rho_R
ofplot %>% group_by(key, rho_R) %>% summarise(var=var(value)) %>%
ggplot(aes(x=rho_R, y=var, color=key)) +
geom_line(size=0.7) + geom_point() +
theme_bw() + theme(legend.position = 'bottom') +
labs(title='Empirical variance',
subtitle='Varying share of external trial data used',
color='Method',
x='Share of external trial used', y='Empirical variance of estimator')
# # make density ridge plot of the three densities
ofplot %>% ggplot(aes(x=value, y=key,fill=key)) +
facet_wrap(~as.factor(rhoR)) +
geom_density_ridges() +
theme_bw() + theme(legend.position='none')
library(tidyverse)
library(ggridges)
n <- 500
Rvec <- c(0.001, 0.01, 0.25, 0.5)
resdf <- data.frame()
for (rho_R in Rvec) {
for (ii in 1:1000) {
print(ii)
X <- 1+rnorm(n)
R <- rbinom(n,1,0.1*plogis(X))
V <- ifelse(R==1, 1, rbinom(n,1,rho_R))
Y <- 1 + X + R*0.3*X^2 + rnorm(n)
muY1 <- 1 + X + 1*0.3*X^2
muY0 <- 1 + X
muY <- muY1*R + muY0*(1-R)
df <- data.frame(X=X, R=R, V=V, Y=Y, muY1=muY1, muY0=muY0, muY=muY)
# Estimate mean of Y|X
muYmod <- lm(Y ~ (X + R)^2, data=df %>% filter(V==1))
# Get predictions with R=1
muY1pred <- predict(muYmod, newdata=df %>% mutate(R=1))
# mean of Y among those with R=1
ybar1 <- mean(Y[R==1])
cvterm <- mean(muY1[V==1])
centerterm <- mean(muY1)
# Get infl funcs
y_eif <- Y*R/mean(R)
cv_eif <- muY1*V/mean(V)
center_eif <- muY1
# Get control variate est
ybar_cv <- ybar1 - cov(y_eif,cv_eif-center_eif)/var(cv_eif-center_eif) * (cvterm-centerterm)
# Do version with estimated muY
cv_eif <- muY1pred*V/mean(V)
center_eif <- muY1pred
ybar_cv2 <- ybar1 - cov(y_eif,cv_eif-center_eif)/var(cv_eif-center_eif) * mean(cv_eif-center_eif)
resdf <- rbind(resdf, data.frame(ybar1=ybar1,
ybar_cv=ybar_cv,
ybar_cv2=ybar_cv2,
rho_R=rho_R))
}
}
library(tidyverse)
library(ggridges)
n <- 1000
Rvec <- c(0.001, 0.01, 0.25, 0.5)
resdf <- data.frame()
for (rho_R in Rvec) {
for (ii in 1:500) {
print(ii)
X <- 1+rnorm(n)
R <- rbinom(n,1,0.1*plogis(X))
V <- ifelse(R==1, 1, rbinom(n,1,rho_R))
Y <- 1 + X + R*0.3*X^2 + rnorm(n)
muY1 <- 1 + X + 1*0.3*X^2
muY0 <- 1 + X
muY <- muY1*R + muY0*(1-R)
df <- data.frame(X=X, R=R, V=V, Y=Y, muY1=muY1, muY0=muY0, muY=muY)
# Estimate mean of Y|X
muYmod <- lm(Y ~ (X + R)^2, data=df %>% filter(V==1))
# Get predictions with R=1
muY1pred <- predict(muYmod, newdata=df %>% mutate(R=1))
# mean of Y among those with R=1
ybar1 <- mean(Y[R==1])
cvterm <- mean(muY1[V==1])
centerterm <- mean(muY1)
# Get infl funcs
y_eif <- Y*R/mean(R)
cv_eif <- muY1*V/mean(V)
center_eif <- muY1
# Get control variate est
ybar_cv <- ybar1 - cov(y_eif,cv_eif-center_eif)/var(cv_eif-center_eif) * (cvterm-centerterm)
# Do version with estimated muY
cv_eif <- muY1pred*V/mean(V)
center_eif <- muY1pred
ybar_cv2 <- ybar1 - cov(y_eif,cv_eif-center_eif)/var(cv_eif-center_eif) * mean(cv_eif-center_eif)
resdf <- rbind(resdf, data.frame(ybar1=ybar1,
ybar_cv=ybar_cv,
ybar_cv2=ybar_cv2,
rho_R=rho_R))
}
}
# get mean and variance by rho_R
resdf %>% group_by(rho_R) %>% summarise(mean_ybar1=mean(ybar1),
mean_ybar_cv=mean(ybar_cv),
mean_ybar_cv2=mean(ybar_cv2),
var_ybar1=var(ybar1),
var_ybar_cv=var(ybar_cv),
var_ybar_cv2=var(ybar_cv2))
# Reshape data to long format using pivot_longer
# Also rename the
ofplot <- resdf %>% pivot_longer(cols=c(ybar1, ybar_cv, ybar_cv2),
names_to='key', values_to='value') %>%
filter(key != 'ybar_cv') %>%
mutate(key=ifelse(key=='ybar1', 'Trial only', 'Control variate')) %>%
mutate(rhoR = paste0('Share of ext. trial used: ', rho_R))
# Get summary stats of value for each value of key and rho_R
# ofplot %>% group_by(key, rho_R) %>% summarise(mean=mean(value), sd=sd(value))
# # make density ridge plot of the three densities
ofplot %>% ggplot(aes(x=value, y=key,fill=key)) +
facet_wrap(~as.factor(rhoR)) +
geom_density_ridges() +
theme_bw() + theme(legend.position='none')
# Plot empirical variances of each method as a function of rho_R
ofplot %>% group_by(key, rho_R) %>% summarise(var=var(value)) %>%
ggplot(aes(x=rho_R, y=var, color=key)) +
geom_line(size=0.7) + geom_point() +
theme_bw() + theme(legend.position = 'bottom') +
labs(title='Empirical variance',
subtitle='Varying share of external trial data used',
color='Method',
x='Share of external trial used', y='Empirical variance of estimator')
# # make density ridge plot of the three densities
ofplot %>% ggplot(aes(x=value, y=key,fill=key)) +
facet_wrap(~as.factor(rhoR)) +
geom_density_ridges() +
theme_bw() + theme(legend.position='none')
muY1*V/mean(V)
cv_eif <- (1-V)*muY1/mean(1-V) + muY1*V/mean(V)
mean(cv_eif)
cv_eif <- (1-V)*muY1/mean(V) + muY1*V/mean(V)
mean(cv_eif)
mean(s)
s
# covariate
x <- rnorm(n)
# sampling probs
sprobs <- rho*plogis(x)/mean(plogis(x))
s <- rbinom(n,1,sprobs)
# centering data
v <- ifelse(s==0,0,rbinom(n,1,rho_s))
vprobs <- sprobs + rho_s*(1-sprobs)
s*v
# sampling probs
sprobs <- rho*plogis(x)/mean(plogis(x))
s <- rbinom(n,1,sprobs)
n <- 1000
rho <- 0.1
rho_s <- 0.1
# covariate
x <- rnorm(n)
# sampling probs
sprobs <- rho*plogis(x)/mean(plogis(x))
s <- rbinom(n,1,sprobs)
s
# centering data
v <- ifelse(s==1,0,rbinom(n,1,rho_s))
vprobs <- sprobs + rho_s*(1-sprobs)
s*v
# first est: y among s==1
ybar[ii] <- mean(y[s==1])
# final term: weighted avg
cv[ii] <- mean(y[s==1])*mean(s) + mean(y[v==1])(mean(1-s))
# center term: full mean
center_term[ii] <- mean(y)
# first est: y among s==1
ybar[ii] <- mean(y[s==1])
# final term: weighted avg
cv[ii] <- mean(y[s==1])*mean(s) + mean(y[v==1])*(mean(1-s))
# center term: full mean
center_term[ii] <- mean(y)
ybar=rep(NA,5000) ; cv=rep(NA,5000) ; center_term=rep(NA,5000)
n <- 1000
rho <- 0.1
rho_s <- 0.1
ybar=rep(NA,500) ; cv=rep(NA,500) ; center_term=rep(NA,500)
for (ii in 1:500) {
# covariate
x <- rnorm(n)
# sampling probs
sprobs <- rho*plogis(x)/mean(plogis(x))
s <- rbinom(n,1,sprobs)
# centering data
v <- ifelse(s==1,0,rbinom(n,1,rho_s))
vprobs <- sprobs + rho_s*(1-sprobs)
# actual outcome
y <- x + s + rnorm(n)
# first est: y among s==1
ybar[ii] <- mean(y[s==1])
# final term: weighted avg
cv[ii] <- mean(y[s==1])*mean(s) + mean(y[v==1])*(mean(1-s))
# center term: full mean
center_term[ii] <- mean(y)
}
mean(ybar)
mean(ipw)
mean(ipw_v)
mean(ybar)
mean(cv)
mean(center_term)
mean(y[s==1])*mean(s)
mean(y)
mean(y*s/mean(s))
mean(y)
mean(y*s)/mean(s)
mean(y)
mean(y[s==1])
mean(y)
mean(y[s==1])*mean(s)
mean(y)
# final term: weighted avg
cv[ii] <- mean(y*s/mean(s))*mean(s) + mean(y[v==1])*(mean(1-s))
mean(y*s/mean(s))*mean(s)
mean(y[s==1])*mean(s)
# get est
y_eif <- y*s/mean(s)
center_eif <- y
cv_eif <- y*s + y*v*mean(1-s)/mean(v)
mean(y_eif)
mean(y[s==1])
mean(center_eif)
mean(y)
cv_eif <- y*s + y*v*mean(1-s)/mean(v)
mean(cv_eif)
mean(y[s==1])*mean(s) + mean(y[v==1])*(mean(1-s))
mean(y[s==1])*mean(s) + mean(y[s==0])*mean(1-s)
mean(y)
mean(y[v==1])
mean(y[s==0])
table(s,v)
mean(y[s==1])*mean(s) + mean(y[s==0])*mean(1-s)
mean(y[s==1])*mean(s) + mean(y[v==1])*(mean(1-s))
n <- 1000
rho <- 0.1
rho_s <- 0.1
ybar=rep(NA,500) ; cv=rep(NA,500) ; center_term=rep(NA,500)
for (ii in 1:500) {
# covariate
x <- rnorm(n)
# sampling probs
sprobs <- rho*plogis(x)/mean(plogis(x))
s <- rbinom(n,1,sprobs)
# centering data
v <- ifelse(s==1,0,rbinom(n,1,rho_s))
vprobs <- sprobs + rho_s*(1-sprobs)
# actual outcome
y <- x + s + rnorm(n)
# first est: y among s==1
ybar[ii] <- mean(y[s==1])
# final term: weighted avg
cv[ii] <- mean(y[s==1])*mean(s) + mean(y[v==1])*(mean(1-s))
# center term: full mean
center_term[ii] <- mean(y[s==1])*mean(s) + mean(y[s==0])*mean(1-s)
# get est
y_eif <- y*s/mean(s)
center_eif <- y
cv_eif <- y*s + y*v*mean(1-s)/mean(v)
}
mean(ybar)
mean(cv)
mean(center_term)
n <- 1000
rho <- 0.1
rho_s <- 0.1
ybar=rep(NA,500) ; cv=rep(NA,500) ; center_term=rep(NA,500)
for (ii in 1:500) {
# covariate
x <- rnorm(n)
# sampling probs
sprobs <- rho*plogis(x)/mean(plogis(x))
s <- rbinom(n,1,sprobs)
# centering data
v <- ifelse(s==1,0,rbinom(n,1,rho_s))
vprobs <- sprobs + rho_s*(1-sprobs)
# actual outcome
y <- x + s + rnorm(n)
# first est: y among s==1
ybar[ii] <- mean(y[s==1])
# final term: weighted avg
cv[ii] <- mean(y[s==1])*mean(s) + mean(y[v==1])*(mean(1-s))
# center term: full mean
center_term[ii] <- mean(y[s==1])*mean(s) + mean(y[s==0])*mean(1-s)
# get est
y_eif <- y*s/mean(s)
center_eif <- y
cv_eif <- y*s + y*v*mean(1-s)/mean(v)
}
mean(ybar)
mean(cv)
mean(center_term)
n <- 1000
rho <- 0.1
rho_s <- 0.1
ybar=rep(NA,500) ; cv=rep(NA,500) ; center_term=rep(NA,500)
for (ii in 1:500) {
# covariate
x <- rnorm(n)
# sampling probs
sprobs <- rho*plogis(x)/mean(plogis(x))
s <- rbinom(n,1,sprobs)
# centering data
v <- ifelse(s==1,0,rbinom(n,1,rho_s))
vprobs <- sprobs + rho_s*(1-sprobs)
# actual outcome
y <- x + s + rnorm(n)
# first est: y among s==1
ybar[ii] <- mean(y[s==1])
# final term: weighted avg
cv[ii] <- mean(y[s==1])*mean(s) + mean(y[v==1])*(mean(1-s))
# center term: full mean
center_term[ii] <- mean(y[s==1])*mean(s) + mean(y[s==0])*mean(1-s)
# get est
y_eif <- y*s/mean(s)
center_eif <- y
cv_eif <- y*s + y*v*mean(1-s)/mean(v)
}
mean(ybar)
mean(cv)
mean(center_term)
var(cv)
var(center_term)
ybar=rep(NA,500) ; cv=rep(NA,500) ; center_term=rep(NA,500) ; cv_est=rep(NA,500)
n <- 1000
rho <- 0.1
rho_s <- 0.1
ybar=rep(NA,500) ; cv=rep(NA,500) ; center_term=rep(NA,500) ; cv_est=rep(NA,500)
for (ii in 1:500) {
# covariate
x <- rnorm(n)
# sampling probs
sprobs <- rho*plogis(x)/mean(plogis(x))
s <- rbinom(n,1,sprobs)
# centering data
v <- ifelse(s==1,0,rbinom(n,1,rho_s))
vprobs <- sprobs + rho_s*(1-sprobs)
# actual outcome
y <- x + s + rnorm(n)
# first est: y among s==1
ybar[ii] <- mean(y[s==1])
# final term: weighted avg
cv[ii] <- mean(y[s==1])*mean(s) + mean(y[v==1])*(mean(1-s))
# center term: full mean
center_term[ii] <- mean(y[s==1])*mean(s) + mean(y[s==0])*mean(1-s)
# get est
y_eif <- y*s/mean(s)
center_eif <- y
cv_eif <- y*s + y*v*mean(1-s)/mean(v)
cv_est[ii] <- mean(y_eif) - cov(y_eif,cv_eif-center_eif)/var(cv_eif-center_eif) * (mean(cv_eif-center_eif))
}
mean(ybar)
mean(cv)
mean(center_term)
mean(cv_est)
var(ybar)
var(cv_es)
var(cv_est)
mean(v)
n <- 1000
rho <- 0.1
rho_s <- 0.025
ybar=rep(NA,500) ; cv=rep(NA,500) ; center_term=rep(NA,500) ; cv_est=rep(NA,500)
for (ii in 1:500) {
# covariate
x <- rnorm(n)
# sampling probs
sprobs <- rho*plogis(x)/mean(plogis(x))
s <- rbinom(n,1,sprobs)
# centering data
v <- ifelse(s==1,0,rbinom(n,1,rho_s))
vprobs <- sprobs + rho_s*(1-sprobs)
# actual outcome
y <- x + s + rnorm(n)
# first est: y among s==1
ybar[ii] <- mean(y[s==1])
# final term: weighted avg
cv[ii] <- mean(y[s==1])*mean(s) + mean(y[v==1])*(mean(1-s))
# center term: full mean
center_term[ii] <- mean(y[s==1])*mean(s) + mean(y[s==0])*mean(1-s)
# get est
y_eif <- y*s/mean(s)
center_eif <- y
cv_eif <- y*s + y*v*mean(1-s)/mean(v)
cv_est[ii] <- mean(y_eif) - cov(y_eif,cv_eif-center_eif)/var(cv_eif-center_eif) * (mean(cv_eif-center_eif))
}
mean(ybar)
mean(cv)
mean(center_term)
mean(cv_est)
var(ybar)
var(cv_est)
cov(y_eif,cv_eif-center_eif)
var(cv_eif-center_eif)
cv_eif
center_eif
plot(cv_eif,center_eif)
n <- 1000
rho <- 0.1
rho_s <- 0.5
ybar=rep(NA,500) ; cv=rep(NA,500) ; center_term=rep(NA,500) ; cv_est=rep(NA,500)
for (ii in 1:500) {
# covariate
x <- rnorm(n)
# sampling probs
sprobs <- rho*plogis(x)/mean(plogis(x))
s <- rbinom(n,1,sprobs)
# centering data
v <- ifelse(s==1,0,rbinom(n,1,rho_s))
vprobs <- sprobs + rho_s*(1-sprobs)
# actual outcome
y <- x + s + rnorm(n)
# first est: y among s==1
ybar[ii] <- mean(y[s==1])
# final term: weighted avg
cv[ii] <- mean(y[s==1])*mean(s) + mean(y[v==1])*(mean(1-s))
# center term: full mean
center_term[ii] <- mean(y[s==1])*mean(s) + mean(y[s==0])*mean(1-s)
# get est
y_eif <- y*s/mean(s)
center_eif <- y
cv_eif <- y*s + y*v*mean(1-s)/mean(v)
cv_est[ii] <- mean(y_eif) - cov(y_eif,cv_eif-center_eif)/var(cv_eif-center_eif) * (mean(cv_eif-center_eif))
}
mean(ybar)
mean(cv)
mean(center_term)
mean(cv_est)
var(ybar)
var(cv_est)
install.packages('hal9001')
n_obs <- 500
n_covars <- 3
# make some training data
x <- replicate(n_covars, rnorm(n_obs))
y <- sin(x[, 1]) + sin(x[, 2]) + rnorm(n_obs, mean = 0, sd = 0.2)
# make some testing data
test_x <- replicate(n_covars, rnorm(n_obs))
test_y <- sin(x[, 1]) + sin(x[, 2]) + rnorm(n_obs, mean = 0, sd = 0.2)
hal9001::fit_hal(X=x,Y=y)
themod <- hal9001::fit_hal(X=x,Y=y)
n_obs <- 2500
n_covars <- 3
# make some training data
x <- replicate(n_covars, rnorm(n_obs))
# make some training data
x <- replicate(n_covars, rnorm(n_obs))
y <- sin(x[, 1]) + sin(x[, 2]) + rnorm(n_obs, mean = 0, sd = 0.2)
# make some testing data
test_x <- replicate(n_covars, rnorm(n_obs))
test_y <- sin(x[, 1]) + sin(x[, 2]) + rnorm(n_obs, mean = 0, sd = 0.2)
rnorm(1000)
rnorm(1000)
rnorm(1000)
rnorm(1000)
rnorm(1)
rnorm(1)
setwd('/Users/keithbarnatchez/Documents/research/control-variates')
# path <- 'sim_results/sim_results_2024-04-30_09-56-18.182285.csv'
path <- 'sim_results/sim_results_2024-08-29_22-11-29.251738.csv'
# sim_results_2024-08-29_22-11-29.251738
res <- read.csv(path)
new_res <- c('sim_results/sim_results_2024-08-29_22-11-30.77385.csv',
'sim_results/sim_results_2024-08-29_22-11-33.77693.csv',
'sim_results/sim_results_2024-08-29_22-11-34.041517.csv',
'sim_results/sim_results_2024-08-29_22-11-40.029741.csv')
for (r in 1:length(new_res)) {
tmp <- read.csv(new_res[r])
res <- rbind(res, tmp)
}
help(write.csv)
write.csv(res,'sim_results/sim_results_2024-08-29.csv')
dir()
